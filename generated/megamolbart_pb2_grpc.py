# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import megamolbart_pb2 as megamolbart__pb2


class GenerativeSamplerStub(object):
    """import "google/protobuf/empty.proto";

    python -m pip install grpcio
    python -m pip install grpcio-tools
    python -m grpc_tools.protoc -I./setup/ \
    --python_out=./generated/ \
    --grpc_python_out=./generated/ \
    --experimental_allow_proto3_optional \
    ./setup/megamolbart.proto

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SmilesToEmbedding = channel.unary_unary(
                '/nemo_chem.models.megamolbart.grpc.GenerativeSampler/SmilesToEmbedding',
                request_serializer=megamolbart__pb2.InputSpec.SerializeToString,
                response_deserializer=megamolbart__pb2.OutputSpec.FromString,
                )
        self.SmilesToHidden = channel.unary_unary(
                '/nemo_chem.models.megamolbart.grpc.GenerativeSampler/SmilesToHidden',
                request_serializer=megamolbart__pb2.InputSpec.SerializeToString,
                response_deserializer=megamolbart__pb2.OutputSpec.FromString,
                )
        self.HiddenToSmis = channel.unary_unary(
                '/nemo_chem.models.megamolbart.grpc.GenerativeSampler/HiddenToSmis',
                request_serializer=megamolbart__pb2.InputSpec.SerializeToString,
                response_deserializer=megamolbart__pb2.OutputSpec.FromString,
                )


class GenerativeSamplerServicer(object):
    """import "google/protobuf/empty.proto";

    python -m pip install grpcio
    python -m pip install grpcio-tools
    python -m grpc_tools.protoc -I./setup/ \
    --python_out=./generated/ \
    --grpc_python_out=./generated/ \
    --experimental_allow_proto3_optional \
    ./setup/megamolbart.proto

    """

    def SmilesToEmbedding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SmilesToHidden(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HiddenToSmis(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GenerativeSamplerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SmilesToEmbedding': grpc.unary_unary_rpc_method_handler(
                    servicer.SmilesToEmbedding,
                    request_deserializer=megamolbart__pb2.InputSpec.FromString,
                    response_serializer=megamolbart__pb2.OutputSpec.SerializeToString,
            ),
            'SmilesToHidden': grpc.unary_unary_rpc_method_handler(
                    servicer.SmilesToHidden,
                    request_deserializer=megamolbart__pb2.InputSpec.FromString,
                    response_serializer=megamolbart__pb2.OutputSpec.SerializeToString,
            ),
            'HiddenToSmis': grpc.unary_unary_rpc_method_handler(
                    servicer.HiddenToSmis,
                    request_deserializer=megamolbart__pb2.InputSpec.FromString,
                    response_serializer=megamolbart__pb2.OutputSpec.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'nemo_chem.models.megamolbart.grpc.GenerativeSampler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GenerativeSampler(object):
    """import "google/protobuf/empty.proto";

    python -m pip install grpcio
    python -m pip install grpcio-tools
    python -m grpc_tools.protoc -I./setup/ \
    --python_out=./generated/ \
    --grpc_python_out=./generated/ \
    --experimental_allow_proto3_optional \
    ./setup/megamolbart.proto

    """

    @staticmethod
    def SmilesToEmbedding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nemo_chem.models.megamolbart.grpc.GenerativeSampler/SmilesToEmbedding',
            megamolbart__pb2.InputSpec.SerializeToString,
            megamolbart__pb2.OutputSpec.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SmilesToHidden(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nemo_chem.models.megamolbart.grpc.GenerativeSampler/SmilesToHidden',
            megamolbart__pb2.InputSpec.SerializeToString,
            megamolbart__pb2.OutputSpec.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HiddenToSmis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/nemo_chem.models.megamolbart.grpc.GenerativeSampler/HiddenToSmis',
            megamolbart__pb2.InputSpec.SerializeToString,
            megamolbart__pb2.OutputSpec.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
